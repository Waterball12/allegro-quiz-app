syntax = "proto3";

option csharp_namespace = "Quiz.API";
import "google/protobuf/empty.proto";
package quiz;

// The quizer service definition.
service Quizer {

  // Create a new game and room where players can play
  rpc CreateGame (QuizCreateRequest) returns (QuizCreatedResponse);

  // Create a new quiz in the database
  rpc CreateQuiz(CreateQuizRequest) returns (google.protobuf.Empty);

  rpc GetQuiz(GetQuizRequest) returns (QuizCreatedResponse);
  rpc StartGame(QuizStartRequest) returns (google.protobuf.Empty);
  rpc JoinGame(JoinGameRequest) returns (google.protobuf.Empty);
  rpc NextQuestion(NextQuestionRequest) returns (google.protobuf.Empty);
  rpc SubmitAnswer(SubmitAnswerRequest) returns (google.protobuf.Empty);
}

message SubmitAnswerRequest {
	string answer = 1;
	string userId = 2;
	uint64 id = 3;
}

message NextQuestionRequest {
	uint64 id = 1;
}

message GetQuizRequest {
	uint64 id = 1;
}

message JoinGameRequest {
	uint64 id = 1;
	string user = 2;
}

message QuizStartRequest {
	uint64 id = 1;
}

message QuizExistResponse {
	QuizData quiz = 1;
}	

message QuizExistRequest {
	uint64 id = 1;
}

message CreateQuizRequest {
	string title = 1;
	string description = 2;
	repeated QuestionData questions = 3;
}

// The request message containing the quiz specification
message QuizCreateRequest {
  string title = 1;
  QuizData quiz = 2;
}

// The response message containing id of the game
message QuizCreatedResponse {
  uint64 id = 1;
  QuizData quiz = 2;
  repeated string users = 3;
  bool isOwner = 4;
}

message QuizData {
	string title = 1;
	string description = 2;
	string imageUrl = 3;
	repeated QuestionData questions = 4;
}

message QuestionData {
	int32 timeout = 1;
	string title = 2;
	repeated AnswerData answers = 3;
}

message AnswerData {
	string description = 1;
	bool isCorrect = 2;
}